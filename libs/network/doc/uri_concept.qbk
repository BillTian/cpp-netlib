[/
  (C) Copyright 2010 Glyn Matthews.
  Distributed under the Boost Software License, Version 1.0.
  (See accompanying file LICENSE_1_0.txt or copy at
  http://www.boost.org/LICENSE_1_0.txt).
]


[section:uri_concept URI Concepts]

A type models the URI Concept if the type adheres to the following
usage semantics, and is __default_constructible__ and
__equality_comparable__.

[variablelist Notation
    [[`U`] [A URI Type.]]
    [[`u`, `u_`] [A URI Type instance.]]
    [[`S`] [A String Type.]]
    [[`s`] [A String Type instance.]]
]

[heading Valid Expressions]

For any URI, the following expressions must be valid:

[table
    [[Expression]       [Return Type]   [Description]]
    [[`U u_(u)`;]       []              [U must be Copy constructible.]]
    [[`U u_; u_ = u;`]  []              [U must be Assignable.]]
    [[`U u_(s)`;]       []              [U can be constructed from a string `s`.]]
    [[`swap(u, u_);`]   [void]          [Swap should be availabe via ADL.]]
    [[`protocol(u);`]   [S]             [Return the protocol part of the URI.]]
    [[`rest(u);`]       [S]             [Return the rest of the URI, excluding the protocol part.]]
    [[`valid(u);`]      [bool]          [Return true whether the URI is a valid URI.]]
    [[`U::string_type`] [S]             [U should have a nested type `string_type` of type `S`.]]
]

[endsect] [/ uri_concept]
